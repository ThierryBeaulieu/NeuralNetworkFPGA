// Generated by CIRCT firtool-1.62.0
module NeuralNetwork(
  input        clock,
               reset,
  output [7:0] io_outputTestWeight,
               io_outputTestReceiving,
  input  [7:0] s_axis_tdata,
  input        s_axis_tkeep,
               s_axis_tvalid,
               s_axis_tlast,
  output       s_axis_tready,
  output [7:0] m_axis_tdata,
  output       m_axis_tkeep,
               m_axis_tvalid,
               m_axis_tlast,
  input        m_axis_tready
);

  reg         sending;
  reg         handling;
  wire        _GEN = s_axis_tvalid & s_axis_tlast;
  reg  [24:0] layer1_0;
  reg  [8:0]  pixelIndex;
  always @(posedge clock) begin
    if (reset) begin
      sending <= 1'h0;
      handling <= 1'h0;
      layer1_0 <= 25'h0;
      pixelIndex <= 9'h0;
    end
    else begin
      automatic logic _GEN_0 = handling & pixelIndex == 9'h190;
      sending <= _GEN_0 | sending;
      handling <= ~_GEN_0 & (_GEN | handling);
      if (handling) begin
        automatic logic [511:0][7:0] _GEN_1 =
          '{8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'hFF,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'hFF,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'hFF,
            8'h0,
            8'hFF,
            8'hFE,
            8'hFF,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'hFE,
            8'h0,
            8'h3,
            8'h5,
            8'h3,
            8'h2,
            8'h1,
            8'hFD,
            8'hF8,
            8'hF7,
            8'hF8,
            8'hFC,
            8'hFF,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h1,
            8'h1,
            8'hFD,
            8'h0,
            8'hC,
            8'h8,
            8'hFC,
            8'hFB,
            8'hFF,
            8'hFB,
            8'hF0,
            8'hE7,
            8'hEE,
            8'hF5,
            8'hFD,
            8'hFF,
            8'h0,
            8'h0,
            8'h2,
            8'h2,
            8'h1,
            8'hFE,
            8'hFD,
            8'h2,
            8'h5,
            8'h6,
            8'h2,
            8'hFD,
            8'hFD,
            8'hFA,
            8'hEF,
            8'hE8,
            8'hE4,
            8'hED,
            8'hFB,
            8'h2,
            8'h0,
            8'h0,
            8'h5,
            8'h5,
            8'h2,
            8'hFE,
            8'hFD,
            8'hFD,
            8'hFA,
            8'hF6,
            8'h7,
            8'h14,
            8'h15,
            8'h16,
            8'hFB,
            8'hEF,
            8'hEF,
            8'hE8,
            8'hFF,
            8'h8,
            8'h1,
            8'h0,
            8'h0,
            8'h3,
            8'hFE,
            8'hF4,
            8'hFC,
            8'h1,
            8'hFC,
            8'h6,
            8'hA,
            8'h18,
            8'h18,
            8'h1D,
            8'hB,
            8'h1,
            8'hF6,
            8'hF1,
            8'h2,
            8'hC,
            8'h1,
            8'h0,
            8'h2,
            8'h7,
            8'hFA,
            8'hEB,
            8'hF6,
            8'hF9,
            8'hF7,
            8'hC,
            8'hF,
            8'hD,
            8'hF,
            8'h8,
            8'h5,
            8'hF0,
            8'hED,
            8'hED,
            8'hFC,
            8'h9,
            8'h3,
            8'h0,
            8'h2,
            8'hA,
            8'h2,
            8'hE9,
            8'hF4,
            8'hFF,
            8'h2,
            8'h6,
            8'h1A,
            8'h11,
            8'h18,
            8'h14,
            8'hFF,
            8'hF1,
            8'hFE,
            8'hF2,
            8'hFA,
            8'h8,
            8'h4,
            8'h0,
            8'h1,
            8'hE,
            8'h3,
            8'hED,
            8'hF8,
            8'h16,
            8'h9,
            8'h10,
            8'h28,
            8'h1E,
            8'hF,
            8'h7,
            8'hF4,
            8'hF8,
            8'hFD,
            8'hEF,
            8'hF2,
            8'h2,
            8'h4,
            8'h0,
            8'h3,
            8'h10,
            8'h2,
            8'hE5,
            8'hF8,
            8'hD,
            8'hF,
            8'h27,
            8'h16,
            8'h1,
            8'hDE,
            8'hE8,
            8'hEC,
            8'hFE,
            8'hF3,
            8'hF6,
            8'hFF,
            8'hFE,
            8'h3,
            8'h0,
            8'h4,
            8'h9,
            8'hF2,
            8'hDF,
            8'h4,
            8'h9,
            8'h1B,
            8'h24,
            8'hFE,
            8'hE6,
            8'hE8,
            8'hF2,
            8'hF7,
            8'h5,
            8'hFE,
            8'hF4,
            8'h2,
            8'h4,
            8'h2,
            8'h0,
            8'h4,
            8'h12,
            8'hF8,
            8'hE7,
            8'hF7,
            8'h1,
            8'h19,
            8'h10,
            8'hF6,
            8'hEE,
            8'hFD,
            8'hEF,
            8'hFA,
            8'hFF,
            8'h0,
            8'h1,
            8'hF,
            8'h9,
            8'h1,
            8'h0,
            8'h2,
            8'hF,
            8'hF7,
            8'hEA,
            8'hF4,
            8'hED,
            8'hFD,
            8'hFB,
            8'hF4,
            8'hF2,
            8'hFE,
            8'hF9,
            8'h0,
            8'h2,
            8'h1,
            8'h4,
            8'h16,
            8'hA,
            8'h1,
            8'h0,
            8'h2,
            8'hA,
            8'h1,
            8'hFA,
            8'hF8,
            8'hE7,
            8'hF4,
            8'h8,
            8'h9,
            8'h5,
            8'h5,
            8'h8,
            8'h5,
            8'h1,
            8'hFF,
            8'h7,
            8'hF,
            8'h7,
            8'h1,
            8'h0,
            8'h1,
            8'h7,
            8'h8,
            8'h1,
            8'hEF,
            8'hE1,
            8'hEA,
            8'h0,
            8'h11,
            8'hF,
            8'hFF,
            8'hFB,
            8'hFF,
            8'h3,
            8'h2,
            8'h7,
            8'h5,
            8'h3,
            8'h0,
            8'h0,
            8'h1,
            8'h2,
            8'hFB,
            8'hF8,
            8'hEE,
            8'hF0,
            8'hF7,
            8'hFA,
            8'h5,
            8'hFE,
            8'hFE,
            8'h4,
            8'hFE,
            8'h1,
            8'hC,
            8'h8,
            8'h4,
            8'h0,
            8'h0,
            8'h0,
            8'h1,
            8'h0,
            8'hF6,
            8'hFC,
            8'hFD,
            8'hF3,
            8'hF9,
            8'hFF,
            8'h4,
            8'h4,
            8'h7,
            8'hA,
            8'h6,
            8'h1,
            8'h4,
            8'h3,
            8'h1,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'hFB,
            8'hFE,
            8'h0,
            8'hFA,
            8'hFA,
            8'hFF,
            8'h2,
            8'h3,
            8'h5,
            8'h8,
            8'h3,
            8'hFF,
            8'hFD,
            8'hFE,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'hFF,
            8'hFF,
            8'h0,
            8'h0,
            8'h0,
            8'h1,
            8'h1,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'h0,
            8'hFF};
        layer1_0 <= layer1_0 + {17'h0, _GEN_1[pixelIndex]};
        pixelIndex <= pixelIndex + 9'h1;
      end
    end
  end // always @(posedge)
  assign io_outputTestWeight = 8'hFF;
  assign io_outputTestReceiving =
    sending ? layer1_0[7:0] : s_axis_tvalid ? (s_axis_tlast ? 8'hA : s_axis_tdata) : 8'h0;
  assign s_axis_tready = ~_GEN;
  assign m_axis_tdata = 8'h0;
  assign m_axis_tkeep = 1'h1;
  assign m_axis_tvalid = 1'h0;
  assign m_axis_tlast = 1'h0;
endmodule

